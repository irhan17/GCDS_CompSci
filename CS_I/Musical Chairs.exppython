{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nleft_drive_smart = Motor(Ports.PORT6, False)\nright_drive_smart = Motor(Ports.PORT10, True)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, brain_inertial, 259.34, 320, 40, MM, 1)\noptical_1 = Optical(Ports.PORT1)\n\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    brain_inertial.calibrate()\n    while brain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n#endregion VEXcode Generated Robot Configuration\n# ------------------------------------------\n# \n# \tProject:      Robot Musical Chairs\n#\tAuthor:       Irhan Iftikar\n#\tCreated:      December 2022\n#\tDescription:  Robot plays musical chairs when it sees a green light, and when it sees red, it races towards middle of circle\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\ndr = 0      #Establishes dr variable - will be set to 0 or 1\nr = 406.4       #Radius of circle in mms\ndeg = 20        #Degree angle that the robot turns\nlength = 175    #Length in mms the robot travels per rotation\n\nwhile True:     #Creates a while loop and makes code run forever\n    if optical_1.color() == Color.GREEN: #If robot's sensor sees green...\n        dr = 1          #Sets dr to 1\n    elif optical_1.color() == Color.RED: #If robot's sensor sees red...\n        dr = 0          #Sets dr to 0\n    else:               #Otherwise...\n        dr = dr         #Dr value stays the same\n    \n    if dr == 1:         #If dr is set to one (if it sees green)\n        drivetrain.drive_for(FORWARD, length, MM) #Robot drives forward for 175 mm\n        drivetrain.turn_for(RIGHT, deg, DEGREES) #Robot also turns right 20 degrees\n    elif dr == 0: #If dr is set to 0 (if it sees red)\n        drivetrain.turn_for(RIGHT, 90, DEGREES) #Robot turns right 90 degrees\n        drivetrain.drive_for(FORWARD, r, MM) #Robot goes forward 406.4 millimeters\n        break   #Code ends","textLanguage":"python","rconfig":[{"port":[6,10,null],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel325in","gearRatio":"1:1","direction":"fwd","gyroType":"integrated","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[1],"name":"optical_1","customName":false,"deviceType":"Optical","deviceClass":"optical","setting":{}}],"slot":0,"platform":"EXP","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}